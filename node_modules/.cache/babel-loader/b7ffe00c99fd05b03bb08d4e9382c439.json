{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsmith/Source/map/src/App.js\";\nimport React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport Select from 'react-select';\nimport \"./App.css\";\nimport useSwr from \"swr\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json()); // const StarRatings = [\n//   { label: \"1 star\", value: 1 },\n//   { label: \"2 stars\", value: 2 },\n//   { label: \"3 stars\", value: 3 },\n//   { label: \"4 stars\", value: 4 },\n//   { label: \"5 stars\", value: 5 },\n// ];\n\n\nexport const icon = new Icon({\n  iconUrl: \"/mountain.svg\",\n  iconSize: [25, 25]\n});\n\nconst App = () => {\n  const url = 'https://www.mountainproject.com/data/get-routes-for-lat-lon?lat=40.65&lon=-111.91&maxDistance=10&minDiff=5.6&maxDiff=5.10&key=200703063-2c86cd159070d7b2b2f9abc830c4f44b';\n  const {\n    data,\n    error\n  } = useSwr(url, {\n    fetcher\n  });\n  const climbs = data && !error ? data.routes : [];\n  const [filterClimbs, setFilterClimbs] = React.useState(climbs);\n  const [activeClimb, setActiveClimb] = React.useState(null);\n  const [stars, setStars] = React.useState(null); // const [minDiff, setMinDiff] = React.useState(null);\n  // const [maxDiff, setMaxDiff] = React.useState(null);\n\n  const StarRatings = [...new Set(climbs.map(x => ({\n    label: x.stars + \"stars\",\n    value: x.stars\n  })))];\n\n  const onChangeStars = e => {\n    const newClimbs = climbs.filter(x => x.stars === e.value);\n    setFilterClimbs(newClimbs);\n    console.log(e.label, e.value);\n    setStars(e);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filterMountains\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Select, {\n    options: StarRatings,\n    value: stars,\n    onChange: onChangeStars,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(Select, {\n    options: StarRatings,\n    value: stars,\n    onChange: onChangeStars,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Select, {\n    options: StarRatings,\n    value: stars,\n    onChange: onChangeStars,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(Map, {\n    center: [40.65, -111.91],\n    zoom: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), filterClimbs.map(climb => React.createElement(Marker, {\n    key: climb.id,\n    position: [climb.latitude, climb.longitude],\n    onClick: () => {\n      setActiveClimb(climb);\n    },\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), activeClimb && React.createElement(Popup, {\n    position: [activeClimb.latitude, activeClimb.longitude],\n    onClose: () => {\n      setActiveClimb(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, activeClimb.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, activeClimb.rating)))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinsmith/Source/map/src/App.js"],"names":["React","Map","Marker","Popup","TileLayer","Icon","Select","useSwr","fetcher","args","fetch","then","response","json","icon","iconUrl","iconSize","App","url","data","error","climbs","routes","filterClimbs","setFilterClimbs","useState","activeClimb","setActiveClimb","stars","setStars","StarRatings","Set","map","x","label","value","onChangeStars","e","newClimbs","filter","console","log","climb","id","latitude","longitude","name","rating"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport Select from 'react-select'\nimport \"./App.css\";\nimport useSwr from \"swr\";\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n// const StarRatings = [\n//   { label: \"1 star\", value: 1 },\n//   { label: \"2 stars\", value: 2 },\n//   { label: \"3 stars\", value: 3 },\n//   { label: \"4 stars\", value: 4 },\n//   { label: \"5 stars\", value: 5 },\n// ];\nexport const icon = new Icon({\n  iconUrl: \"/mountain.svg\",\n  iconSize: [25, 25]\n});\n\nconst App = () => {\n  const url = 'https://www.mountainproject.com/data/get-routes-for-lat-lon?lat=40.65&lon=-111.91&maxDistance=10&minDiff=5.6&maxDiff=5.10&key=200703063-2c86cd159070d7b2b2f9abc830c4f44b';\n  const { data, error } = useSwr(url, { fetcher });\n  const climbs = data && !error ? data.routes : [];\n  const [filterClimbs, setFilterClimbs] = React.useState(climbs);\n  const [activeClimb, setActiveClimb] = React.useState(null);\n  const [stars, setStars] = React.useState(null);\n  // const [minDiff, setMinDiff] = React.useState(null);\n  // const [maxDiff, setMaxDiff] = React.useState(null);\n  const StarRatings = [...new Set(climbs.map(x => ({ label: x.stars + \"stars\", value: x.stars })))];\n  const onChangeStars = (e) => {\n    const newClimbs = climbs.filter(x => x.stars === e.value)\n    setFilterClimbs(newClimbs)\n    console.log(e.label, e.value)\n    setStars(e);\n  };\n  return (\n    <div>\n      <div className=\"filterMountains\">\n        <Select options={StarRatings} value={stars} onChange={onChangeStars}/>\n        <Select options={StarRatings} value={stars} onChange={onChangeStars}/>\n        <Select options={StarRatings} value={stars} onChange={onChangeStars}/>\n\n      </div>\n      <Map center={[40.65, -111.91]} zoom={12}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {filterClimbs.map(climb => (\n          <Marker\n            key={climb.id}\n            position={[climb.latitude, climb.longitude]}\n            onClick={() => {\n              setActiveClimb(climb);\n            }}\n            icon={icon}\n          />\n        ))}\n\n        {activeClimb && (\n          <Popup\n            position={[\n              activeClimb.latitude,\n              activeClimb.longitude\n            ]}\n            onClose={() => {\n              setActiveClimb(null);\n            }}\n          >\n            <div>\n              <h2>{activeClimb.name}</h2>\n              <p>{activeClimb.rating}</p>\n            </div>\n          </Popup>\n        )}\n      </Map>\n    </div>\n  );\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}