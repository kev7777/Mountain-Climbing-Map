{"ast":null,"code":"var _jsxFileName = \"/Users/kevinsmith/Source/map/src/App.js\";\nimport React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport Select from 'react-select';\nimport \"./App.css\";\nimport useSwr from \"swr\";\nimport Filter from './components/Filter';\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\n\nconst StarRatings = [{\n  label: \"All routes\",\n  value: 0\n}, {\n  label: \"1+ of 5 stars\",\n  value: 1\n}, {\n  label: \"2+ of 5 stars\",\n  value: 2\n}, {\n  label: \"3+ of 5 stars\",\n  value: 3\n}, {\n  label: \"4+ of 5 stars\",\n  value: 4\n}, {\n  label: \"5 of 5 stars\",\n  value: 5\n}];\nconst Types = [{\n  label: \"All types\",\n  value: ''\n}, {\n  label: \"Trad\",\n  value: 'Trad'\n}, {\n  label: \"Sport\",\n  value: 'Sport'\n}, {\n  label: \"Toprope\",\n  value: 'TR'\n}];\nexport const icon = new Icon({\n  iconUrl: \"/mountain.svg\",\n  iconSize: [25, 25]\n});\n\nconst App = () => {\n  const url = 'https://www.mountainproject.com/data/get-routes-for-lat-lon?lat=40.65&lon=-111.91&maxDistance=10&minDiff=4.0&maxDiff=5.9&key=200703063-2c86cd159070d7b2b2f9abc830c4f44b';\n  const {\n    data,\n    error\n  } = useSwr(url, {\n    fetcher\n  });\n  const climbs = data && !error ? data.routes : [];\n  const [filterClimbs, setFilterClimbs] = React.useState([]);\n  const [activeClimb, setActiveClimb] = React.useState(null); // React.useEffect(() => {\n  //   setFilterClimbs(climbs);\n  // }, [climbs]);\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"filterMountains\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    climbs: climbs,\n    setFilterClimbs: setFilterClimbs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), React.createElement(Map, {\n    center: [40.65, -111.91],\n    zoom: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TileLayer, {\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), filterClimbs.map(climb => React.createElement(Marker, {\n    key: climb.id,\n    position: [climb.latitude, climb.longitude],\n    onClick: () => {\n      setActiveClimb(climb);\n    },\n    icon: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), activeClimb && React.createElement(Popup, {\n    position: [activeClimb.latitude, activeClimb.longitude],\n    onClose: () => {\n      setActiveClimb(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, activeClimb.name), React.createElement(\"div\", {\n    className: \"info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Difficulty: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, activeClimb.rating), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \"Stars: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, activeClimb.stars), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \"Type: \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, activeClimb.type))))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/kevinsmith/Source/map/src/App.js"],"names":["React","Map","Marker","Popup","TileLayer","Icon","Select","useSwr","Filter","fetcher","args","fetch","then","response","json","StarRatings","label","value","Types","icon","iconUrl","iconSize","App","url","data","error","climbs","routes","filterClimbs","setFilterClimbs","useState","activeClimb","setActiveClimb","map","climb","id","latitude","longitude","name","rating","stars","type"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport Select from 'react-select'\nimport \"./App.css\";\nimport useSwr from \"swr\";\nimport Filter from './components/Filter'\n\nconst fetcher = (...args) => fetch(...args).then(response => response.json());\nconst StarRatings = [\n  { label: \"All routes\", value: 0 },\n  { label: \"1+ of 5 stars\", value: 1 },\n  { label: \"2+ of 5 stars\", value: 2 },\n  { label: \"3+ of 5 stars\", value: 3 },\n  { label: \"4+ of 5 stars\", value: 4 },\n  { label: \"5 of 5 stars\", value: 5 }\n];\nconst Types = [\n  { label: \"All types\", value: '' },\n  { label: \"Trad\", value: 'Trad' },\n  { label: \"Sport\", value: 'Sport' },\n  { label: \"Toprope\", value: 'TR' }\n];\nexport const icon = new Icon({\n  iconUrl: \"/mountain.svg\",\n  iconSize: [25, 25]\n});\n\nconst App = () => {\n  const url = 'https://www.mountainproject.com/data/get-routes-for-lat-lon?lat=40.65&lon=-111.91&maxDistance=10&minDiff=4.0&maxDiff=5.9&key=200703063-2c86cd159070d7b2b2f9abc830c4f44b';\n  const { data, error } = useSwr(url, { fetcher });\n  const climbs = data && !error ? data.routes : [];\n  const [filterClimbs, setFilterClimbs] = React.useState([]);\n  const [activeClimb, setActiveClimb] = React.useState(null);\n\n  // React.useEffect(() => {\n  //   setFilterClimbs(climbs);\n  // }, [climbs]);\n\n  return (\n    <div>\n      <div className=\"filterMountains\">\n        <Filter climbs = {climbs} setFilterClimbs = {setFilterClimbs} />\n      </div>\n      <Map center={[40.65, -111.91]} zoom={12}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {filterClimbs.map(climb => (\n          <Marker\n            key={climb.id}\n            position={[climb.latitude, climb.longitude]}\n            onClick={() => {\n              setActiveClimb(climb);\n            }}\n            icon={icon}\n          />\n        ))}\n\n        {activeClimb && (\n          <Popup\n            position={[\n              activeClimb.latitude,\n              activeClimb.longitude\n            ]}\n            onClose={() => {\n              setActiveClimb(null);\n            }}\n          >\n            <div>\n              <h2>{activeClimb.name}</h2>\n              <div className = 'info'>\n                Difficulty: <b>{activeClimb.rating}</b>\n                <br></br>\n                Stars: <b>{activeClimb.stars}</b>\n                <br></br>\n                Type: <b>{activeClimb.type}</b>\n              </div>\n            </div>\n          </Popup>\n        )}\n      </Map>\n    </div>\n  );\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}